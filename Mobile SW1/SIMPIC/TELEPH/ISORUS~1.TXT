 b - Восстановленное карты:
       -----------------
   Сброс карты вводится устройством интерфейса, после чего карта должна указать Ответ На Сброс как описываться в 2.4.

   К концу активизации контактов (RST - в L, VCC мощннанную и конюшня, I/O в способе приема на устройстве интерфейса, конюшня VPP на холостом уровне, CLK обеспеченный пригодными и стабильными часами), ответ карты асинхронно готов для сброса.

   Сигнал часов относится к CLK во времени T0. Строка I/O должна устанавливаться, чтобы шет Z в пределах 200 clcok циклов сигнала часов (t2) быть относившееся к CLK (время t2 после T0).

   Непосредственно восстанавливающее карту восстановленную после того, как несколько циклов часов сигнализировались. Ответ На Сброс на I/O должен начинаться между 400 и 40 000 циклов часов (t1) после того, как сигнал часов относился к CLK (время t1 после T0).

   Карта с активным низким сбросом восстановлена поддерживая RST в штате L для по крайней мере 40 000 циклов часов (t3) после того, как сигнал часов приложился на CLK (время t3 после T0). Таким образом если никакой Ответ На Сброс begind в пределах 40 000 циклов часов (t3) с RST в штате L, RST устанавливается, чтобы шет H (в время T1). Ответ На Сброс на I/O должен начинаться между 400 и 40 000 циклов часов (t1) после растущего края сигнала на RST (время t1 после T1).

   Если Anwser в Сбросе не начинается в пределах 40 000 циклов часов (t3) с RST в штате H (t3 после T1), сигнал на RST должен возвращаться штату L (во времени T2) и контакты должны desactivated устройством интерфейса.



GND __________________________________________________________________________
        __________________________________________________________________
VCC ___| : :|___
         :_______________________________________________________________:
VPP ____|: |____
         :             t3                            t3                  :
         :<--------------------------->:<------------------------------->:
         :                             :_________________________________:
RST _____:_____________________________| |____
         :                             :                                 :
CLK _____|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||____
         :       t1                    :                                 :
         :<-------------->:            :                                 :
         :      __________:____________:_________________________________:
I/O ____XXXXXXXX |____________:_______Answer____________________:XXXX (IR) : : ::
         :  t2  :                      :      t1                         :
         :<---->:                      :<---------->:                    :
         :      _______________________:_________________________________:
I/O ____XXXXXXXX : |______Answer________:XXXX (AL) : t2 : ::
         :<---->:                      :                                 :
         :                             :_________________________________:
I/O ____XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX: :XXXXX (SH) : ::
         T0                            T1                                T2

    IR : ВНУТРЕННИЙ Сброс t2 <= 200/fi AL : Асинхронный Сброс 400/fi <= t1 <= 40000/fi SH : Syncronous Восстанавливает 40000/fi <= t3

                      Figure1 : Восстановитесь карты
                      ~~~~~~~

   С картой, отвечающей synchonously, устройство интерфейса устанавливает все строки, чтобы шет L (Смотри рисунок 2). VCC - мощннанная, VPP устанавливается в холостом состоянии, CLK и RST оставаться в состоянии L, I/O вложен способ приема на устройстве интерфейса, RST должно поддерживаться в штате H для по крайней мере 50 меня (t12), прежде, чем возвратить, чтобы шет L снова.

   Импульс часов приложен после интервала (t10) с растущего края сигнала сброса. Длительность штата H импульса часов может быть любой величиной между 10 нами и 50 он; не более чем один импульс часов в течение сброса высоко допущен. Интервал времени между падением изменяется на CLK и RST - t11.

   Первый бит данных получен как ответ на сброс на I/O пока CLK - в штате L и - в силе после интервала t13 из падения края в RST.

        ______________________________________________________________________
VCC ___/

         _____________________________________________________________________
VPP ____/
                   t12
           :<---------------->:
           :__________________:
RST ______/: \_______________________________________________
           :                    :
           :  t10           t11 :          t15      t16
           :<---->:      :<---->:  t14   :<---->: :<---->:
                  : ____ :      :<---->: :______: :      : _______
CLK_______________:/  1 \:______:______:/   2    \:______:/   3   \_______
                                :                 :
                                : t13             :  t17
                                :<---->:          :<---->:
         _____________________________ :______________   :______________   ___
I/O ____//////////////////////////////\:_______1______X-X_______2_______X-X___


   5us <= t10 10us <= t14 <= Низкий Уровень 100us Часов после RST 5us <= t11 10us <= t15 <= Часы 50us Высокий 50us <= t12........ Восстановите Высокий 10us <= t16 <= Низкий Уровень 100us Часов t13 <= задержка Распространения 10us t17 <= задержка Распространения 10us

           Figure2 : Восстановитесь карты, когда синхронный ответ ожидается.
           ~~~~~~~


   ПРИМЕЧАНИЯ:

   1 - Внутреннее состояние карты принят не быть определен прежде, чем восстанавливалось. Следовательно разработка карты должна избегать функционирования inproper.

   2 - Продолжать диалог с картой, RST должно поддерживаться в состоянии где ответ происходит в I/O.

   3 - Восстановленное карты могут вводиться устройством интерфейса в своем discetion в любое время.

   4 - Интерфейс устройств могут поддержать одно или более этих типа поведения сброса. Приоритет испытания для асинхронных или синхронных карт не определяется в этом стандарте.


   c - Дезактивация контактов
       ----------------------------
   Когда обмен информации расторгнут или прерывающий (неотзывчивую карту или обнаружение удаления карты), электрические контакты должны desactivated.

   Дезактивация устройством интерфейса должна состоять из последовательных операций:

       - Штат L в RST;
       - Штат L в CLK;
       - Vpp Неактивный;
       - Укажите on I/O;
       - VCC НЕАКТИВНЫЙ;

   2.3.4) Ответ На Сброс:
          ---------------
   Два типа передач считаются:

   * Асинхронная Передача Данных:
     В этом типе передачи, символы передаются в строку I/O в асинхронном наполовину дуплексном режиме. Каждый символ включает байт 8bit.


   * Асинхронная Передача Данных:
     В этом типе передачи, serie битов передается в строку I/O в наполовину дуплексном режиме в synchronisation с сигналом часов в CLK.

   a - Ответ На Сброс на асинхронной передаче данных
       --------------------------------------------

   * Битовая длительность
     """"""""""""
     Номинальная битовая длительность использованная на I/O определена как одно Элементарное Устройство Времени (etu).

     Для карт, имеющих внутренние часы, начальный etu - 1/9600 s.

     Для карт, использующих внешние часы, есть линейное отношение между Элементарным Устройством Времени использованным в I/O и периоде предусмотренным устройством интерфейса в CLK.

        Начальный etu - 372/fi s где fi - в Герце.

     Начальная частота fi предоставляется устройством интерфейса на CLK в течение Ответа Сбросу.

     Читать начальный символ (TS), все карты должны первоначально обслуживаться с fi в области 1 MHz в 5 MHz.

   * Символьный фрейм в течение ответа на сброс
     """"""""""""""""""""""""""""""""""""""
     До передачи символа, I/O будет в штате Z.

     Символ состоит из десяти последовательных битов:

        - стартовый бит в штате A;
        - восемь битов информации, определили ba на bh и перевозя байт данных;
        - десятый бит bi использовался для проверки проверки на четность.

     Байт данных состоит из 8 битов определенных b1 на b8, с младшего бита (младший бит, b1) на наиболее значимом бите (старший бит, b8).

     Соглашения (уровень, кодирующий, соединяющий уровни Z/A в цифрах 1 или 0: и битовое значение, соединение ba...bh в b1...b8) определяются в начальном символе, вызов TS, который передается картой в ответ на сброс.

     Четность - правильно, когда количество - даже в последовательности из ba в bi.

     Whithin Символ, время с ведущего края стартового бита на заднем крае энного бита должен равняться (n+/-0.2) etu.

     Ища начало, образцы получателя I/O периодически. Начало времени быть средство между последним наблюдением уровня Z и первым наблюдением уровня A, начало должно быть проверено перед 0.7 etu, и затем ba получается в (1.5 +/-0.2) etu. Четность проверена на лету.

     ПРИМЕЧАНИЕ : ища начало, время дискретизации должно быть менее чем
     0.2 etu так, что все зоны теста четкие от зон перехода.

     Задержка между двумя последовательными символами (между начните вести краи) - по крайней мере 12 etu, включая символьную длительность (10+/-0.2) etu плюс guardtime, устройство интерфейса и карта reamain в приеме, так, что I/O - в штате Z.

            Следующий бит Стартовой Четности <----- 8 битов данных -----> битовый Стартовый бит Z ____ ________________________________......______ __
             |   |  |  |  |  |  |  |  |  |  |                 |   |
     I/O | |ba|bb|bc|bd|be|bf|bg|bh|bi| Guardtime | |
             |___|__|__|__|__|__|__|__|__|__|                 |___|_
     A : : ::
             0   t1                   :    t10
             :                        :
             :<---- (n+/-0.2) etu --->:


                          Рисунок 3: Символьный фрейм
                          ~~~~~~~~

     В течение Ответа На Сброс, задержку между начните вести краи двух последовательных символов с карты не должно exeed 9600 etu. Этот максимум назван начальное время ожидания.

   * Обнаружение Ошибки и повторение символа
     """"""""""""""""""""""""""""""""""""""""
     В течение ответа на сброс, следующая процедура повторения символов зависит от типа протокола. Эта процедура обязательна для карт, использующих тип протокола T=0; это дополнительное для устройства интерфейса и для других карт.

     Передатчик тестирует I/O (11+/-0.2) etu после стартового ведущего края:
         - Если I/O - в штате Z, правильный прием принят.
         - Если I/O - в штате A, передача принимается, чтобы было неправильным. Оспоренный символ должен быть повторен после задержки по крайней мере 2 etu после обнаружения сигнала рассогласования.

     Когда четность неправильная, от (10.5+/-0.2) etu, получатель передает сигнал рассогласования в состоянии for 1 etu минимальный и 2 etu максимум.  Получатель затем должен ожидать повторение оспоренного символа (смотри рисунок 8).

     Если никакое символьное повторение не предусматривается картой,
         - Карта игнорирует и не должно страдать ущербом с сигнала рассогласования исходящего из устройства интерфейса.
         - Устройство интерфейса должно смочь ввести прием и целый Ответ На последовательность ответа Сброса.

   * Структуры и содержание
     """"""""""""""""""""""
     Функционирование сброса заканчивается ответом с карты состоящей из начального символа TS сопровождающегося самое большее 32 символами в следующем порядке:

         - T0................... Символ Управления Форматом (Обязательный)
         - ТАЙ, TBi, TCi, TDi... Свяжите символы (Дополнительные)
         - T1, T2,... ,TK...... Исторические символы (Дополнительные)
         - TCK.................. Контрольный Знак (Условный)


Сброс
 |
 |    _________________________________________         _______   _________
 |   |   |   |   |   |   |   |   |   |   |   |           |   |     |   |   |
 '-->| TS| T0|TA1|TB1|TC1|TD1|TA2|TB2|TC2|TD2|......... | T1|... | TK|TCK|
     |___|___|___|___|___|___|___|___|___|___|_         _|___|_   _|__ |___|

     TS : НАЧАЛЬНЫЙ символ НА : ТАЙ Символа Управления Форматом : символ Интерфейса [ коды FI,DI ] TBi : символ Интерфейса [ коды II,PI1 ] TCi : символ Интерфейса [ коды N ] TDi : символ Интерфейса [ коды Yi+1, T ] T1,... , TK : ИСТОРИЧЕСКИЕ символы (max,15) TCK : Контрольный Знак

         Рисунок 4 : Общая конфигурация Ответа На Сброс
         ~~~~~~~~


     Символы интерфейса определяют физические параметры интегральной схемы на карте и логических характеристиках последующего биржевого протокола.

     Исторические символы определяют общую информацию, для exemple, изготовителя карты, чип включался на карту, замаскированное ПЗУ в чипе, состоянии жизни карты. Спецификация исторических символов падает за пределами области этой части ISO/IEC7816.

     Для национальной простоты, T0, ТАЙ,... ,TCK ОПРЕДЕЛИТ байты, а также символы в которых они содержатся.

     Структура TS, начального символа
     --------------------------------------
     Начальный символ TS обеспечивает битовую последовательность shynchronisation и определяет соглашения, чтобы закодировать байты данных во всех последующих символах.
     Эти соглашения ссылаются на ISO1177.

     I/O - первоначально в штате Z. Битовая последовательность synchronisation (Z)AZZA определяется для стартового бита и битов ba bb bc (смотри рисунок 5).

     Последний раз 3 бита bg bh bi будет AAZ для проверки четности.

     ПРИМЕЧАНИЕ : Это допускает устройство интерфейса на determinate etu первоначально использованный картой. Альтернативное измерение etu является третий задержки между сначала два падая краи в TS. Передача и механизмы приема на карте будет соответствующим альтернативному определению etu.

     Две возможных величины TS (десять последовательных битов из начала на bi и соответствуя шестнадцатеричной величине) -

         - Обратное соглашение : (Z)ZZAAAAAZ где логический уровень ОДИН - A, ba - b8 (старший бит - сначала), равный $3F, когда декодировано обратным соглашением.

         - Прямое соглашение : (Z)ZZAZZZAAZ где логический уровень ОДИН - Z, ba - b1 (младший бит сначала), равный $3B, когда декодировано прямым соглашением.


                 Начало ba bb bc bd будет bf bg bh bi Z ____ _______ ___________ ______ | | | | | Z Z Z | | | | (Z)| | Z Z | | или | | Z (Z) |___| |___|_A___A___A_|___|___|

                    Рисунок 5 : Начальный символ TS
                    ~~~~~~~~

     Структура последующих символов в Ответе На Сброс
     -------------------------------------------------------------
     Начальный символ TS следует за переменным количеством последующих символов в следующем порядке: символ управления форматом T0 и, дополнительно ТАЙ символов интерфейса, TBi, TCi, TDi и исторические символы T1, T2,... , TK И условно, контрольный знак TCK.

     Присутствие символов интерфейса указывается техникой поразрядной карты объясненной ниже.

     Присутствие исторических символов указывается количеством байтов как определено в символе управления форматом определенном нижеуказанным.

     Присутствие контрольного знака TCK зависит от типа протокола(s) как определенного как ниже.

     - T0 Символа Управления Форматом
       ~~~~~~~~~~~~~~~~~~~
     Символ T0 содержит две части:

         - Наиболее значимый полбайта (b5, b6, b7, b8) назван Y1 и указывается логическим уровнем ОДНО присутствие последующих символов TA1, TB1, TC1, TD1 соответственно.

         - Наименее значимый полбайта (b4 на b1) назван K и указывает число (0 - 15) исторических символов.


         ,----,----,----,----,----,----,----,----,
         | b8 | b7 | b6 | b5 | b4 | b3 | b2 | b1 |
         '----'----'----'----'----'----'----'----'
         :<------- Y1 ------>:<-------- K ------>:

         Y1 : указатель для присутствия символов интерфейса TA1 передается, когда b5=1 TB1 передается, когда b6=1 TC1 передается, когда b7=1 TD1 передается, когда b8=1

         K : число символов hitorical

                    Рисунок 6 : Информация предусматривалась T0
                    ~~~~~~~~


     - ТАЙ символов Интерфейса, TBi, TCi, TDi
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     ТАЙ, TBi, TCi (i=1, 2, 3,... ) укажите параметры протокола.
     TDi УКАЗЫВАЕТ тип протокола T и присутствие последующих символов.

     Биты b5, b6, b7, b8 байта содержа Yi (T0 содержит Y1; TDi СОДЕРЖИТ Yi+1) штат символьное ТАЙ whelther для b5, символ TBi для b6, символ TCi для b7, символ TDi для b8 - или не - (в зависимости от whelther актуальный бит - 1 или 0) переданное впоследствии в этот порядок после символа, содержащего Yi.

     Когда нужно, устройство интерфейса должно приписывать значение по умолчанию на информации соответствующей не переданному символу интерфейса.

     Когда TDi не передается, значение по умолчанию Yi+1 недействительно, указывая, что никакие дальнейшие символы интерфейса TAi+j, TBi+j, TCi+j, TDi+j будет передан.


         ,----,----,----,----,----,----,----,----,
         | b8 | b7 | b6 | b5 | b4 | b3 | b2 | b1 |
         '----'----'----'----'----'----'----'----'
         :<------ Yi+1 ----->:<------- T ------->:

         Yi+1 : указатель для присутствия символов интерфейса TAi+1 передается, когда b5=1 TBi+1 передается, когда b6=1 TCi+1 передается, когда b7=1 TDi+1 передается, когда b8=1

         T : Тип Протокола для последующей передачи.

                    Рисунок 7 : Информация предусматривалась TDi
                    ~~~~~~~~


     - Исторические символы T1, T2,... ,TK
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Когда K не недействительно, ответ на сброс продолжается передачей исторических символов K T1, T2,... , TK.

     - Контрольный Знак TCK
       ~~~~~~~~~~~~~~~~~~~
     Величина TCK должна быть так что исключительная-операция или всех байтов из T0 на включенном TCK недействительна.

     Ответ На сброс - завершены 12 etu после ведущего края последнего символа.


     Тип Протокола T
     ---------------
     Четыре наименее значимые биты любого символа интерфейса TDi указывают тип протокола T, определяя правила, которые должны использоваться, чтобы обработать протоколы передачи. Когда TDi не передается, T=0 использован.

     T=0 - асинхронный наполовину дуплексный протокол передачи символа.
     T=1 - асинхронный полдуплексный блочный протокол передачи.
     T=2 и T=3 резервируются для полных дуплексных операций будущего.
     T=4 резервируется для расширенного асинхронного наполовину дуплексного протокола передачи символа.
     T=5 на T=13 резервируются для будущего использования.
     T=14 резервируется для протоколов нормализованных ISO.
     T=15 резервируется для будущего расширения.

     ПРИМЕЧАНИЕ : Если только T=0 указывается, TCK не должно быть послано. Во всех других случаях TCK должно быть послано.

     Спецификация глобальных байтов интерфейса
     --------------------------------------------
     Среди байтов интерфейса возможно переданных картой в ответ на сброс, эти subclaus определяет только глобальные байты интерфейса TA1, TB1,
     TC1, TD1.

     Эти глобальные байты интерфейса перевозят информацию, чтобы определить параметры, которые устройство интерфейса должно принять во внимание.

     - Параметры F, D, Я, P, N
       ~~~~~~~~~~~~~~~~~~~~~~~~
     Этот начальный etu используется в течение ответа на сброс заменяется рабочим etu в течение последующей передачи. F - тактовый показатель преобразования частоты и D - сборочный показатель скорости передачи информации в бит-сек, чтобы определить рабочий etu на последующих передачах.

     Для внутренних карт часов:

        начальный etu = 1/9600 s рабочий etu = (1/D)*(1/9600) s

     Для внешних карт часов:

        начальный etu = 372/fi s рабочий etu = (1/D)*(F/fs) s

     Минимальная величина fs должна быть 1MHz.
     Максимальная величина fs дается таблицей 6.

    Я и P определяю активное состояние в VPP.
       - Максимум, программирующий ток : Ipp = 1mA
       - Программирование напряжения : Vpp = P.V

     N Дополнительное guardtime запрошенный картой. Прежде, чем получить следующий символ, карта требует задержку по крайней мере (12+N) etu со стартового ведущего края предшествующего символа. Никакой дополнительный guardtme используется, чтобы послать символы с карты на устройстве интерфейса.

     Встроенные величины этих параметров:
        F = 372;   D = 1;  I = 50;  P = 5;  N = 0


     - Целое оценивается в глобальных байтах интерфейса
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Глобальные байты интерфейса, TA1, TB1, TC1, кодовое целое величин TB2 FI, DI II, PI1, N, PI2, которые являются или равными или использованными, чтобы вычислить величины параметров F, D, Я, P, N представленное вышеуказанным.

     коды TA1 FI над наиболее значимый полбайта (b8 на b5) и DI над наименее значимый полбайта (b4 на b1).

     коды TB1 II над битами b7 и b6 и PI1 над 5 наименее значимыми битами b5 в b1. Наиболее значимый бит b8 равный 0.

     ПРИМЕЧАНИЕ : устройство интерфейса может проигнорировать бит b8 TB1.

     коды TC1 N над восемью битами (b8 на b1).

     коды TB2 PI2 над восемью битами (b8 на b1).


     Таблица 6: Тактовый показатель преобразования частоты F
     ~~~~~~~
     ----------------------------------------------------------------------
            FI | 0000 0001 0010 0011 0100 0101 0110 0111
     --------------+-------------------------------------------------------
            F | Внутренние clk 372 558 744 1116 1488 1860 RFU
     --------------+-------------------------------------------------------
      fs (max) MHz | - 5 6 8 12 16 20 -
     ----------------------------------------------------------------------

     ---------------------------------------------------------------
            FI | 1000 1001 1010 1011 1100 1101 1110 1111
     --------------+------------------------------------------------
            F | RFU 512 768 1024 1536 2048 RFU RFU
     --------------+------------------------------------------------
      fs (max) MHz | - 5 7.5 10 15 20 - -
     ---------------------------------------------------------------
      RFU : ЗАРЕЗЕРВИРОВАННОЕ для Будущего Использования


     Таблица 7: afjustment Скорости Передачи Информации В Бит-сек показателя D
     ~~~~~~~
     -------------------------------------------------------
        DI | 0000 0001 0010 0011 0100 0101 0110 0111
     ------+------------------------------------------------
        D | RFU 1 2 4 8 16 RFU RFU
     -------------------------------------------------------

     -------------------------------------------------------
        DI | 1000 1001 1010 1011 1100 1101 1110 1111
     ------+------------------------------------------------
        D | RFU RFU 1/2 1/4 1/8 1/16 1/32 1/64
     -------------------------------------------------------
      RFU : ЗАРЕЗЕРВИРОВАННОЕ для Будущего Использования


     - Программирование показателя напряжения P
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     PI1 от 5 до 25 дает величину P в вольтах. PI1=0 указывает, что VPP связывается на карту, которая генерирует внутреннее напряжение программирования из VCC. Другие величины PI1 резервируются для будущего использования.

     Когда PI2 представляет, указание PI1 должно быть игнорируется. PI2 от 50 до 250 дает величину P в 0.1V. Другие величины PI2 резервируются для будущего использования.


     Таблица 8 : Максимум, программирующий текущий показатель I
     ~~~~~~~
     -------------------------------
      II | 00 01 10 11
     -----+-------------------------
      Я | 25 50 100 RFU
     -------------------------------

     - Дополнительный guardtime N
       ~~~~~~~~~~~~~~~~~
     Коды N непосредственно дополнительное время охраны, от 0 до 254 etu. N=255 указывает, что минимальная задержка между стартовыми краями двух последовательных символов сводится к 11 etu.


   b - Ответ На Сброс на асинхронной передаче данных
       -------------------------------------------
   * Синхронизируйте частоту и скорость передачи информации в бит-сек
     """"""""""""""""""""""""""""
     Есть линейное отношение между скоростью передачи информации в бит-сек в строке I/O и частоте часов предусмотренных устройством интерфейса часов в CLK.

     Любая частота часов между 7kHz и 50kHz может выбираться для последовательности сброса. Частота часов 7kHz соответствует 7kbit/s, и величинам частоты часов вплоть до причины 50kHz, соответствующей битовым показателям, которые должны передаваться.

   * Структура заголовка Ответа На Сброс
     """"""""""""""""""""""""""""""""""""""""""""""
     Функционирование сброса заканчивается ответом с карты, содержащей заголовок переданный с карты на интерфейс. Заголовок имеет фиксированную длину 32 битов и начинается с двумя обязательными областями 8 битов, H1 и H2.

     Порядок chronological передачи битов информации должен correcpond на битовой идентификации b1 на b32 с младшим битом переданным сначала. Цифровое значение соответствующее каждому информационному разряду считающемуся на изоляцию - та самая цифра.

- 0 для устройства соответствующего состоянию (пространство)
- 1 для устройства соответствующего штату Z (маркер)

   * Синхронизация haeder
     """"""""""""""""""""
     После процедуры сброса, выходной информации управляется импульсами часов. Первый импульс часов прилагается между 10us и 100us (t14) после падения края на RST, чтобы прочитать биты данных с карты. Штат H импульсов часов может измениться в пределах от 10us до 50us (t15) и штата L между 10us и 100us (t16).

     Первый бит данных получается на I/O пока часы является низким уровнем и - в силе 10us (t13) по крайней мере после падения края в RST. Следующие биты данных будут в силе 10us (t17) по крайней мере после падения края в CLK. Каждый бит данных - в силе до затем падая край следующий импульс часов в CLK. Биты данных могут следовательно обрчутся на растущий край следующих импульсов часов.

   * Содержание Данных заголовка
     """"""""""""""""""""""""""
     Заголовок допускает быстрое определение whelther карта и устройство интерфейса совместимые. Если нет совместимости, контакты должны desactivated.

     Первая область H1 кодирует тип протокола. Величины кодов и соответствующего типа протокола

          Шестнадцатеричный тип протокола величины
          -----------------------------------
           00 и ff не быть использован
           01 в FE каждой величине назначается ISO/IEC JTC1/SC17 в одном типе протокола

     Вторая область H2 кодирует параметры для типа протокола закодированного в области
     H1. Величины H2 должны назначаться ISO/IEC JTC1/SC17.


   2.3.5) Выбор типа Протокола (PTS)
          -----------------------------
   Если только один тип протокола и FI=D=1 (значение по умолчанию TA1) и N меньше чем 255 указывается в ответе на сброс. Протокол передачи связанный в тип протокола может быть запущен немедленно после передачи ответа на сброс.

   Если более чем один тип протокола и/или величины параметра TA1 кроме встроенных величин и/или N equeal на 255 -/указываются в ответе на сброс, карта должна узнать однозначно, после того как послало ответ на сброс, который тип протокола или/и величины параметра передачи (FI, D, N) будет использовано. Следовательно выбор типа протокола и/или величины параметров передачи должен быть определен.

   Если карта может обработать более чем один тип протокола и если один из тех типа протокола указан как T=0, затем тип протокола T=0 должен указанное в TD1 как первый предложенный протокол, и принимается если никакой PTS выполнен.

   Если карта предлагает более чем один протокол и если устройство интерфейса поддерживает только один из этих протоколов, который не - T=0 и не поддерживает PTS, интерфейс должен отвергать или восстанавливать карту.

   2.3.5.a - PTS ПРОТОКОЛ
             ------------
   Только устройство интерфейса разрешается начинать с процедуры PTS:

      - Устройство интерфейса посылает запрос PTS на карту.
      - Если карта получает правильный запрос PTS, он отвечает на посылая PTS подтверждает, если осуществлено или начальное время ожидания будет превышено.
      - После того, как succesfull обмен запроса PTS и PTS подтвердился, данные должны передаваться с устройства интерфейса, использующего выбранный тип протокола и/или параметры передачи.
      - Если карта получает запрос erronous PTS, он не пошлет PTS подтверждается.
      - Если начальное время ожидания превышено, устройство интерфейса если бы resetor отверг карту.
      - Если устройство интерфейса получает ошибочный PTS подтверждается, это должно восстанавливать или отвергать карту.

   Параметры для передачи PTS запрашивают и PTS подтверждать, должно соответствовать тем использованное в пределах Ответа На Сброс относительно скорости передачи информации в бит-сек и соглашения обнаруженных TS и возможно модифицированных TC1.

   2.3.5.b - Структура и содержание запроса PTS и PTS подтверждаются
             ----------------------------------------------------
   Запрос PTS и ответ PTS каждое состоит из одного начального символа PTSS, сопровождающегося символом управления форматом PTS0, три символа необязательного параметра PTS1 PTS2 PTS3, и символьным чеком PCK в последнем байте.

   PTSS ИДЕНТИФИЦИРУЕТ запрос PTS или PTS подтверждаться и закодирован FF.

   PTS0 указывается битами b5, b6, b7 установленные на 1 присутствие впоследствии посланных дополнительных символов PTS1, PTS2, PTS3 соответственно. Он кодируется над наименее значимыми битами b4 на b1 выбранный тип протокола T как закодировано в байтах TD. Наиболее значимый бит b8 (умолчание b8=0) резервируется для будущего использования.

   PTS1 кодирует величины параметра FI и D как закодировано в TA1. Устройство интерфейса может послать PTS1 указывать выбор FI и/или величины D на карте. Если PTS1 не послан, FI=1 и D=1 приняты как по умолчанию устанавливается. Карта также acknoledges как FI так и величины D эхоконтролем PTS1 или не посылает PTS1 указывая использование встроенных величин.

   PTS2 указывает поддержку N=255, когда бит b1 устанавливается на 1. Бит b1 устанавливается на
   0 - умолчание и указывает, что 11 etu период не использован. Если бит b2 устанавливается на 1, карта должна использовать дополнительный guardtime 12 etu для своего transmssion символов на устройстве интерфейса. Бит b2 установленный на 0 - умолчание и указывает, что никакой дополнительный guardtime требуется. Бит b3 на b8 резервируются для будущего использования.

   Если PTS2 послан устройством интерфейса и не ется картой, устройство интерфейса должно отвергать или восстанавливать карту.

   Кодирование и использование PTS3 не определен.

   Величина PCK должна быть так что исключительная-операция или всех charcters из PTSS на включенном PCK недействительна.


   2.3.6) Тип Протокола T=0, асинхронная наполовину дуплексная передача символа
          protocol----------------------------------------------------------
          --------
   Эта статья определяет структуру и обработку команд введенные устройством интерфейса для управления передачи и для специфического управления карты в асинхронном наполовину дуплексном протоколе передачи символа.

   Этот протокол использует параметры указанные ответом на сброс, если не модифицировано выбором типа протокола.

   2.3.6.a - Специфические параметры интерфейса: работа ожидая время
             ----------------------------------------------------
   В ответе на сброс символ интерфейса TC2 кодирует величину целого WI свыше восьми битов b8 в b1. Когда никакой TC2 появляется в ответе на сброс, значение по умолчанию WI - 10.

   Интервал между стартовым ведущим краем любого символа послал картой и стартовый ведущий край предшествующего символа (посланное или картой или устройством интерфейса) не должен превышать рабочий etu 960*OWI. Эта максимальная задержка названа работа, ожидающая время.

   2.3.6.b - Структура и обработка команд
             ------------------------------------
   Команда всегда вводится устройством интерфейса. Он сообщает карту какое делать в 5-байтовом заголовке, и допускать передачу байтов данных под управлением байтами процедуры посланной картой.

   Допускается что карта и устройство интерфейса знают априори направление данных, для того, чтобы ditinguish между инструкциями для поступающей пересылки данных (где данные входят в карту в течение выполнения) и инструкции для исходящих передач данных (где данные оставляют карту в течение выполнения).


без ошибки четности
~~~~~~~~~~~~~~~~~~~~
        Стартовое Начало
   _____    _____________________________________    ___________
        | | | | Байт, который я | | |P | | | Байт i+1 |__|__|__|__|__|__|__|__|__|__| guartime |__|___________

                                   Даже с четностью ошибки четности ~~~~~~~~~~~~~~~~~~~ битовое Стартовое Начало _____ ______________________________ Ошибка __ ___________ | | | | Байт, который я | | |Байт P i+1 | | сигнал | | |
        |__|__|__|__|__|__|__|__|__|__|  |________|  |__|___________


           Рисунок 8 : Байтовая диаграмма передачи
           ~~~~~~~~

   * Командный заголовок послал устройством интерфейса
     """""""""""""""""""""""""""""""""""""""""""
     Устройство интерфейса передает заголовок свыше пяти последующих байтов определяющих CLA, INS, A1, A2, L.

     - CLA - класс инструкции. Величина FF резервируется для PTS.

     - INS - система команд в классе инструкции. Система Команд - в силе только если младший бит - 0, и наиболее значимый полбайта - ни 6 ни 9.

     - P1, P2 - ссылка (например, адрес) завершая систему команд

     - P3 кодирует число n байтов данных (D1,... , Dn), Который должен передаваться в течение команды. Направление перемещения этих данных зависит от инструкции. В исходящей команде пересылки данных, P3=0 вводит 256 байтовую пересылку данных с карты. В поступающей команде пересылки данных, P3=0 не вводит никакую передачу данных.

     Все остальные возможности кодирки для заголовка определяются в последующих частях ISO7816.

     После передачи такого 5 байтового заголовка, устройство интерфейса ждет байт процедуры.

   * Байты Процедуры послали картой
     """"""""""""""""""""""""""""""""
     Величина байтов процедуры должна указать действие запрошенное устройством интерфейса. Три типа байтов процедуры определены:

     - ACK : ( СЕМЬ большинство значимых битов в байте ACK все равны или дополнительные на в байте INS, за исключением величин 6x и 9x) управление устройством интерфейса состояния VPP и данные обменов в зависимости от величин ACK.

     - НЕДЕЙСТВИТЕЛЬНЫЙ : (=$60) Этот байт послан картой, чтобы перезапустить рабочие время, закончиться, чтобы предположить последующий байт процедуры. Он не запрашивает никакое дальнейшее действие ни на VPP ни в Данных.

     - SW1 (= $6x или $9x, ожидают $60); Устройство интерфейса поддерживает или комплекты VPP в ожидании и ждет байт SW2, чтобы завершить команду.

     Любой переход состояния VPP (активный/холостой) должен произойти в пределах guardtime байта процедуры, или в работе, ожидающей переполнение времени.

     В каждом байте процедуры, карта может приступить к команде ACK или НЕДЕЙСТВИТЕЛЬНЫМ байтом, или показать свой disaproval становясь неотзывчивым, или решиться конечной последовательностью SW1-SW2.

    Байтовый Результат | Величина |
    -----+-------+------------------------------------------------------------
         | INS | VPP - ожидание. Все остальные байты данных переданы | | впоследствии.
         |       |
         | INS+1 | VPP АКТИВНОЕ. Все остальные байты данных переданы | | впоследствии.
    ACK | ___ |
         | INS | VPP - ожидание. Следующий байт данных передан впоследствии.
         | _____ |
         | INS+1 | VPP АКТИВНОЕ. Байт данных Тритона передан впоследствии.
    -----+-------+------------------------------------------------------------
    НЕДЕЙСТВИТЕЛЬНОЕ Никакое действие futher | $60 | в VPP. Устройство интерфейса ждет новый байт процедуры | |
    -----+-------+------------------------------------------------------------
    SW1 | SW1 | VPP - ожидание. Устройство интерфейса ждет байт SW2


     Acknoledge Байты
     ----------------
     Байты ACK используются, чтобы управлять состоянием VPP и пересылкой данных.

       - Когда исключительная-операция или байт ACK с байтом INS дает $00 или $FF, устройство интерфейса поддерживает или комплекты VPP как ожидание.

       - Когда исключительная-операция или байт ACK с байтом INS дает $01 или $FE, устройство интерфейса поддерживает или комплекты VPP как активные.

       - Когда семь большинство значимых битов в байте ACK иметь ту же величину как в байте INS, все, остающийся байты данных (Di,..., Dn) Если любое оставаться, переданы впоследствии.

       - Когда семь большинство значимых битов в байте ACK дополнительные на в байте INS, только следующий байт данных (Di), если одни остатки передан.

     После этих действий, устройство интерфейса ждет новую процедуру.

     Недействительный байт (= $60)
     -----------------
     Этот байт послан картой, чтобы восстановить время workwaiting и предположить последующий байт процедуры.

     Байты Статуса (SW1=$6x или $9x, ожидают $60; SW2 любая величина)
     --------------------------------------------------------
     Конечная последовательность SW1-SW2 дает карте статус в конце команды.

     Нормально окончание указывается SW1-SW2 = $90-$00.

     Когда наиболее значимый полбайта SW1 - $6, значение SW1 - independant приложения. Следующие пять величин определены:

       $6E Карта не поддерживает класс инструкции.
       $6D Система Команд не программируется или недействительно.
       $6B Ссылка неправильная.
       $67 Длина неправильная.
       $6F Никакой точный диагностический дан.

     Другие величины резервируются для будущего использования ISO7816.
     Когда SW1 - ни $6E ни $6D, карта поддерживают инструкцию.
     Эта часть ISO7816 не не интерпретирует ни $9X SW1 байты, ни байты SW2; Их намереваться, иметь отношение к приложению себе.


